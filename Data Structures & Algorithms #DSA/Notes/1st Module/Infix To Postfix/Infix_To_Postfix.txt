#include<stdio.h>
#include<conio.h>
#include<ctype.h>
#include<string.h>
int top=-1;
char infix[50],postfix[50],stack[50];
char pop();
void push(char);
int char_check(char);
int precedence(char);
int calc(int,char,int);
void main()
{
	int i,j,value,x_type,y_type,operand1,operand2,infix_len,postfix_len;
	char x,y,operatr;
	clrscr();
	printf("\n\n Enter the Infix expression : ");
	scanf("%s",infix);
	infix_len=strlen(infix);
	for(i=0,j=0;i<infix_len;i++)
	{
		x=infix[i];
		x_type=char_check(x);
		switch(x_type)
		{
			case 1: postfix[j++]=x;
				break;
			case 2: push(x);
				break;
			case 3: for(y=pop();char_check(y)!=2;y=pop())
					postfix[j++]=y;
				break;
			case 4: if(top==-1||char_check(stack[top])==2||precedence(stack[top])<precedence(x))
					push(x);
				else
				{
					do
					{
						y=pop();
						postfix[j++]=y;
					}while(precedence(stack[top])>=precedence(x));
					push(x);
				}
				break;
			default:clrscr();
				printf("\n\n SYNTAX ERROR: Unknown character found in the Infix Expression !");
				getch();
				exit(0);
		}
	}
	while(top>=0)
		postfix[j++]=pop();
	postfix_len=j;
	for(i=0,top=-1;i<postfix_len;i++)
	{
		y=postfix[i];
		y_type=char_check(y);
		switch(y_type)
		{
			case 1: printf("\n\n Enter value for %c : ",y);
				scanf("%d",&value);
				push(value);
				break;
			case 4: operatr=y;
				operand2=pop();
				operand1=pop();
				push(calc(operand1,operatr,operand2));
				break;
			default:clrscr();
				printf("\n\n SYNTAX ERROR: Unknown character found in Postfix expression !");
				getch();
				exit(0);
		}
	}
	if(top!=0)
	{
		clrscr();
		printf("\n\n PROGRAM ERROR: Stack is not empty !");
		getch();
		exit(0);
	}
	clrscr();
	printf("\n\n Infix Expression   : %s",infix);
	printf("\n\n Postfix Expression : %s",postfix);
	printf("\n\n Solution           : %d",pop());
	getch();
}
int precedence(char c)
{
	switch(c)
	{
		case '^': return 6;
		case '*': return 5;
		case '/': return 5;
		case '%': return 5;
		case '+': return 4;
		case '-': return 4;
		default : return 0;
	}
}
void push(char item)
{
	stack[++top]=item;
}
char pop()
{
	return(stack[top--]);
}
int calc(int o1,char o,int o2)
{
	switch(o)
	{
		case '^': if(o2==0)
				return 1;
			  else
				return(o1*calc(o1,o,o2-1));
		case '*': return(o1*o2);
		case '/': if(o2==0)
			  {
				clrscr();
				printf("\n\n MATH ERROR: Division by Zero not possible !");
				getch();
				exit(0);
			  }
			  else
				return(o1/o2);
		case '%': return(o1%o2);
		case '+': return(o1+o2);
		case '-': return(o1-o2);
		default : clrscr();
			  printf("\n\n SYNTAX ERROR: Unknown Operator found in Postfix expression !");
			  getch();
			  exit(0);
	}
	return 0;
}
int char_check(char c)
{
	if(isalpha(c)!=0)
		return 1;
	else if(c=='(')
		return 2;
	else if(c==')')
		return 3;
	else if(c=='^'||c=='*'||c=='/'||c=='%'||c=='+'||c=='-')
		return 4;
	else
		return 0;
}