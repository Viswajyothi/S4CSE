******************************************************************
	P	R	O	G	R	A	M
******************************************************************

void check_infix()
{
	int i,infix_len,type,ch_type,lp_count=0,rp_count=0;
	char ch;
	infix_len=strinfix_len(infix);
	if(infix_len>=50)
	{
		clrscr();
		printf("\n\n STACK ERROR: Stack size exceeded !");
		getch();
		exit(0);
	}
	for(i=0;i<infix_len;i++)
	{
		ch=infix[i];
		ch_type=char_check(ch);
		if(ch_type==0)
		{
			clrscr();
			printf("\n\n SYNTAX ERROR: Unknown character found in the Infix Expression !");
			getch();
			exit(0);
		}
		else if(i==0)
		{
			if(ch_type==3||ch_type==4)
			{
				clrscr();
				printf("\n\n SYNTAX ERROR: Infix Expression cannot be started with '%c' !",ch);
				getch();
				exit(0);
			}
		}
		else if(i==infix_len-1)
		{
			if(ch_type==2||ch_type==4)
			{
				clrscr();
				printf("\n\n SYNTAX ERROR: Infix Expression cannot be ended with '%c' !",ch);
				getch();
				exit(0);
			}
		}
		else
		{
			type=char_check(infix[i+1]);
			if(ch_type==1||ch_type==3)
			{
				if(ch_type==3)
				{
					rp_count++;
					if(rp_count>lp_count)
					{
						clrscr();
						printf("\n\n SYNTAX ERROR: Paranthesis missing !");
						getch();
						exit(0);
					}
				}
				if(type==1||type==2)
				{
					infix_len++;
					for(j=infix_len-1;j>i;j--)
						infix[j]=infix[j-1];
					infix[j]='*';
				}
				if(infix_len>=50)
				{
					clrscr();
					printf("\n\n STACK ERROR: Stack size exceeded !");
					getch();
					exit(0);
				}
			else
			{
				if(ch_type==2)
					lp_count++;
				if(type==3||type==4)
				{
					clrscr();
					printf("\n\n SYNTAX ERROR: Use of '%c' with '%c' is illegal !",ch,infix[i+1]);
					getch();
					exit(0);
				}
			}
		}
	}
	if(lp_count!=rp_count)
	{
		clrscr();
		printf("\n\n SYNTAX ERROR: Paranthesis missing !");
		getch();
		exit(0);
	}
}